name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: Run CI Tests
    uses: ./.github/workflows/ci.yml

  create-release:
    name: Create Release
    needs: ci
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v4
      - name: Get version from tag
        id: tag_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.TAG }}
          release_name: ${{ steps.tag_version.outputs.TAG }}
          draft: false
          prerelease: false
          body: |
            ## cargo-llms-txt ${{ steps.tag_version.outputs.TAG }}
            
            ### Installation
            
            ```bash
            cargo install cargo-llms-txt
            ```
            
            ### Usage
            
            ```bash
            cargo llms-txt
            ```
            
            ### What's Changed
            
            See the [commit history](https://github.com/masinc/cargo-llms-txt/commits/${{ steps.tag_version.outputs.TAG }}) for detailed changes.

  build-release:
    name: Build Release
    needs: [ci, create-release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: cargo-llms-txt
            asset_name: cargo-llms-txt-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: cargo-llms-txt.exe
            asset_name: cargo-llms-txt-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: cargo-llms-txt
            asset_name: cargo-llms-txt-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: cargo-llms-txt
            asset_name: cargo-llms-txt-macos-arm64

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

  publish-crates:
    name: Publish to crates.io
    needs: [ci, create-release, build-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run tests
        run: cargo test --verbose
      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}